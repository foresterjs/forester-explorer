{"version":3,"sources":["../lib/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAqBG,WAAW,GAAX,WAAW;;;;AAnB3B,IAAM,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC5C,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE7B,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;;AAEjC,SAAO,UAAU,QAAQ,EAAE;;AAEzB,YAAQ,CAAC,mBAAmB,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,EAAC,CAAC,CAAC;;AAE5F,YAAQ,CAAC,GAAG,CAAC,GAAG,CACd,MAAM,CAAC,UAAA,CAAC,EAAI;AACV,OAAC,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,EAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;KACzF,CAAC,CACH,CAAC;GACH,CAAA;CAEF,CAAC;;AAGK,SAAS,WAAW,OAAsB;MAApB,WAAW,QAAX,WAAW;MAAE,IAAI,QAAJ,IAAI;;AAC5C;wDAAO,wBAAqC,IAAI;UAAxB,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UACnC,oBAAoB,EAEf,cAAc,EACjB,gBAAgB;;;;;AAHlB,kCAAoB,GAAG,EAAE;;AAE7B,mBAAS,cAAc,IAAI,WAAW,EAAE;AAClC,gCAAgB,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC,MAAM;;AACzD,oCAAoB,CAAC,IAAI,CAAC;AACxB,sBAAI,EAAE,cAAc;AACpB,4BAAU,EAAE,gBAAgB,CAAC,UAAU;AACvC,2BAAS,EAAE,gBAAgB,CAAC,SAAS;AACrC,2BAAS,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE;iBAC7C,CAAC,CAAC;eACJ;;AAED,sBAAQ,CAAC,IAAI,GAAG,oBAAoB,CAAC;;;qBAE/B,IAAI;;;;;;;;KACX;;;;;OAAA;CACF","file":"index.js","sourcesContent":["\"use strict\";\n\nconst router = require('koa-simple-router');\nconst path = require('path');\n\nmodule.exports = function (config) {\n\n  return function (forester) {\n\n    forester.registerStaticRoute({route: '/explorer', path: path.join(__dirname, '../public')});\n\n    forester.koa.use(\n      router(_ => {\n        _.get('/schema', serveSchema({collections: forester.collections, rest: forester.rest}));\n      })\n    );\n  }\n\n};\n\n\nexport function serveSchema({collections, rest}) {\n  return async function ({request, response}, next) {\n    var endpointsDescription = [];\n\n    for (var collectionName in collections) {\n      var collectionSchema = collections[collectionName].schema;\n      endpointsDescription.push({\n        name: collectionName,\n        properties: collectionSchema.properties,\n        relations: collectionSchema.relations,\n        endpoints: rest.routes[collectionName] || []\n      });\n    }\n\n    response.body = endpointsDescription;\n\n    await next;\n  }\n}\n"]}